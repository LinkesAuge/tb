# TB Scout Application Modernization: Implementation Plan

## File Structure Overview

```
scout/
├── __init__.py
├── main.py (modify)
├── gui.py (modify)
├── overlay.py (modify)
├── window_manager.py (modify)
├── window_interface.py (new)
├── template_matcher.py (modify)
├── text_ocr.py (modify)
├── actions.py (modify)
├── config_manager.py (modify)
├── sound_manager.py (modify)
├── error_handling.py (new)
├── signals.py (new)
├── template_search.py (new)
├── screen_capture/
│   ├── __init__.py (new)
│   ├── capture_manager.py (new)
│   ├── screen_list_model.py (new)
│   ├── window_list_model.py (new)
│   ├── capture_tab.py (new)
│   └── utils.py (new)
├── automation/
│   ├── __init__.py
│   ├── core.py (new)
│   ├── executor.py (modify)
│   ├── gui/ (modify)
│   │   ├── __init__.py
│   │   ├── automation_tab.py (modify)
│   │   └── sequence_builder.py (modify)
│   └── progress_tracker.py (new)
├── utils/
│   ├── __init__.py
│   └── logging_utils.py (new)
├── config/
│   ├── settings.json (modify)
│   └── default_settings.json (new)
└── docs/ (new)
    ├── architecture.md (new)
    ├── components/ (new)
    │   ├── screen_capture.md (new)
    │   ├── overlay.md (new)
    │   └── automation.md (new)
    └── workflows/ (new)
        ├── template_matching.md (new)
        └── automation.md (new)
```

## Detailed Implementation Checklist

## Step-by-Step Implementation

Follow this ordered checklist to implement all components:

1. [x] Create basic supporting modules
   - [x] `error_handling.py`
   - [x] `utils/logging_utils.py`
   - [x] `signals.py`
   - [x] `window_interface.py`

2. [x] Implement the screen capture module
   - [x] `screen_capture/__init__.py`
   - [x] `screen_capture/utils.py`
   - [x] `screen_capture/screen_list_model.py`
   - [x] `screen_capture/window_list_model.py`
   - [x] `screen_capture/capture_manager.py`
   - [x] `screen_capture/capture_tab.py`

3. [x] Implement template search module
   - [x] `template_search.py`

4. [x] Update configuration system
   - [x] Update `config_manager.py` 
   - [x] Create `config/default_settings.json`

5. [x] Refactor window management
   - [x] Update `window_manager.py`
   - [x] Update `window_capture.py`

6. [x] Refactor overlay system
   - [x] Update `overlay.py`

7. [x] Improve automation system
   - [x] Create and break up into smaller parts: `automation/core.py`
   - [x] Create `automation/progress_tracker.py`
   - [x] Update `automation/executor.py`
   - [x] Update/Create `automation/executor.py
   - [x] Update/Create `automation/action_handlers_basic.py
   - [x] Update/Create `automation/action_handlers_flow.py
   - [x] Update/Create `automation/action_handlers_advancedflow.py
   - [x] Update/Create `automation/action_handlers_data.py
   - [x] Update/Create `automation/action_handlers_visual.py
   - [x] Update `automation/gui/*.py` files

8. [x] Update UI components
   - [x] Update `gui.py`
   - [x] Update `debug_window.py`

9. [x] Update main application
   - [x] Update `main.py`

10. [x] Create documentation
   - [x] Create `docs/architecture.md`
   - [x] Create component documentation files
     - [x] `docs/components/screen_capture.md`
     - [x] `docs/components/overlay.md`
     - [x] `docs/components/automation.md`
   - [x] Create workflow documentation files
     - [x] `docs/workflows/template_matching.md`
     - [x] `docs/workflows/automation.md`

11. [x] Bug Fixes
   - [x] Fixed application startup crash (KeyError: 'cross_color') by adding missing default settings in main.py
   - [x] Fixed color format issue (AttributeError: 'tuple' object has no attribute 'blue') by using QColor objects in main.py
   - [x] Fixed missing template settings (KeyError: 'confidence') by adding default values for template_settings in main.py
   - [x] Fixed method name mismatch (AttributeError: 'WindowManager' object has no attribute 'get_window_position') by updating overlay.py to use the correct method name get_window_rect
   - [x] Fixed return type mismatch (AttributeError: 'tuple' object has no attribute 'x') by updating overlay.py to handle tuples returned by get_window_rect instead of expecting QRect objects
   - [x] Fixed DebugWindow constructor parameters (TypeError: DebugWindow.__init__() got an unexpected keyword argument 'window_manager') by updating debug_window.py to accept the expected parameters
   - [x] Fixed AutomationCore constructor parameters (TypeError: AutomationCore.__init__() got an unexpected keyword argument 'window_interface') by updating parameter names and adding missing parameters
   - [x] Fixed NumPy/OpenCV compatibility issue (error: modules compiled with NumPy 1.x cannot run in NumPy 2.2.3) by downgrading NumPy to version 1.26.4
   - [x] Fixed missing action handler parameters (TypeError: BasicActionHandlers.__init__() missing 1 required positional argument: 'log_callback') by updating AutomationCore to provide log_callback and execute_action_callback to all handler classes

